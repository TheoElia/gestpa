"""
Django settings for gsetpa project.

Generated by 'django-admin startproject' using Django 4.1.2.

For more information on this file, see
https://docs.djangoproject.com/en/4.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.1/ref/settings/
"""

from dotenv import load_dotenv
import os
from datetime import timedelta
from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent
load_dotenv(dotenv_path=BASE_DIR / "dev.env")
PROJECT_NAME = "gestpa"


REFRESH_TIMER_INTERVAL_MINUTES = 70

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-0pxz_^!gj6x6cc&3f0ij^sr7%3@25l+@n+nb=1%g2%(wdahce&'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False

ALLOWED_HOSTS = ["*"]

CORS_ORIGIN_ALLOW_ALL = True

CORS_ALLOW_CREDENTIALS = True
CORS_EXPOSE_HEADERS = ["set-auth-token", "set-refresh-token"]

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
     # 
    "core",
    "frontend",
    # third party apps
    "django_extensions",
    "django.contrib.postgres",
    "debug_toolbar",
    "django_celery_beat",
    "rest_framework_swagger",
    "rest_framework_simplejwt",
    "corsheaders",
    "rest_framework",
    "whitenoise",
    "drf_yasg",
    "froala_editor",
    'social_django',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    "gsetpa.middleware.HealthCheckMiddleWare",
    "debug_toolbar.middleware.DebugToolbarMiddleware",
    "qinspect.middleware.QueryInspectMiddleware",
    "corsheaders.middleware.CorsMiddleware",
]

ROOT_URLCONF = 'gsetpa.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        "DIRS": [BASE_DIR / "templates"],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'gsetpa.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/4.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.1/howto/static-files/

STATIC_URL = "/static/"
STATIC_ROOT = BASE_DIR / "static"
MEDIA_URL = "/media/"
MEDIA_ROOT = BASE_DIR / "media"

# Default primary key field type
# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

DEBUG_TOOLBAR_CONFIG = {}


SIMPLE_JWT = {
    "ACCESS_TOKEN_LIFETIME": timedelta(minutes=REFRESH_TIMER_INTERVAL_MINUTES),
    "REFRESH_TOKEN_LIFETIME": timedelta(days=1),
    "ROTATE_REFRESH_TOKENS": False,
    "BLACKLIST_AFTER_ROTATION": True,
    "UPDATE_LAST_LOGIN": False,
    "ALGORITHM": "HS256",
    "SIGNING_KEY": SECRET_KEY,
    "VERIFYING_KEY": None,
    "AUDIENCE": None,
    "ISSUER": None,
    "AUTH_HEADER_TYPES": ("Bearer",),
    "AUTH_HEADER_NAME": "HTTP_AUTHORIZATION",
    "USER_ID_FIELD": "id",
    "USER_ID_CLAIM": "user_id",
    "USER_AUTHENTICATION_RULE": "rest_framework_simplejwt.authentication.default_user_authentication_rule",
    "AUTH_TOKEN_CLASSES": ("rest_framework_simplejwt.tokens.AccessToken",),
    "TOKEN_TYPE_CLAIM": "token_type",
    "JTI_CLAIM": "jti",
    "SLIDING_TOKEN_REFRESH_EXP_CLAIM": "refresh_exp",
    "SLIDING_TOKEN_LIFETIME": timedelta(minutes=5),
    "SLIDING_TOKEN_REFRESH_LIFETIME": timedelta(days=1),
}
# print((os.getenv("RDS_HOSTNAME")))
# print(os.getenv("RDS_PORT"))

# DATABASES = {
#     "default": {
#         "ENGINE": "django.db.backends.postgresql",
#         "NAME": os.getenv("RDS_DB_NAME"),
#         "USER": os.getenv("RDS_USERNAME"),
#         "PASSWORD": os.getenv("RDS_PASSWORD"),
#         "HOST": os.getenv("RDS_HOSTNAME"),
#         "PORT": os.getenv("RDS_PORT"),
#         "CONN_MAX_AGE": 86400,
#     }
# }

REST_FRAMEWORK = {
    "DEFAULT_AUTHENTICATION_CLASSES": [
        "gsetpa.authentication.GSETMemberAuthentication",
    ],
    "DEFAULT_RENDERER_CLASSES": [
        "rest_framework.renderers.JSONRenderer",
    ],
    "DEFAULT_SCHEMA_CLASS": "rest_framework.schemas.coreapi.AutoSchema",
    "DEFAULT_PAGINATION_CLASS": "rest_framework.pagination.PageNumberPagination",
    "PAGE_SIZE": 25,
}

AUTH_USER_MODEL = "core.AdminUser"

ADMIN_USERNAME = os.getenv("ADMIN_USERNAME")
AUTHENTICATION_BACKENDS = [
    'social_core.backends.google.GoogleOAuth2',
    "gsetpa.authentication.GSETBackendAuthentication"
    ]

# CELERY
CELERY_BROKER_URL = os.getenv("REDIS_ENDPOINT")
CELERY_RESULT_BACKEND = os.getenv("REDIS_ENDPOINT")
CELERY_ACCEPT_CONTENT = ["application/json"]
CELERY_RESULT_SERIALIZER = "json"
CELERY_TASK_SERIALIZER = "json"
CELERY_BEAT_SCHEDULER = "django_celery_beat.schedulers:DatabaseScheduler"

# CELERY BEAT
# CELERY_BEAT_SCHEDULE = {
#     "reset_dashboard_metrics_task": {
#         "task": "users.tasks.reset_dashboard_metrics_task",
#         "schedule": crontab(minute=0, hour="*/1"),
#     },
#     "re_run_non_scored_clients": {
#         "task": "users.tasks.re_run_non_scored_clients",
#         "schedule": crontab(minute=0, hour="*/5"),
#     },
# }

# WEBPUSH
WEBPUSH_SETTINGS = {
    "VAPID_PUBLIC_KEY": "BOQBYpSTueLeCBiAMOE21D4zUIo4kEE9wfVYYDb42BoNI06uyo3HxwYzrkoLOU1uaxLS7FRf5kajDYD--oeZQH0",
    "VAPID_PRIVATE_KEY": "kDkxpy4vQ36YxBvcqZzPoPtmZZJFoGIspxeU0XdN9Y0",
    "VAPID_ADMIN_EMAIL": "theophylusnhutiphapha@gmail.com",
}

# FROALA
FROALA_UPLOAD_PATH = "froala/uploads/"
FROALA_EDITOR_PLUGINS = (
    "align",
    "char_counter",
    "code_beautifier",
    "code_view",
    "colors",
    "draggable",
    "emoticons",
    "entities",
    "file",
    "font_family",
    "font_size",
    "fullscreen",
    "image_manager",
    "image",
    "inline_style",
    "line_breaker",
    "link",
    "lists",
    "paragraph_format",
    "paragraph_style",
    "quick_insert",
    "quote",
    "save",
    "table",
    "url",
    "video",
)

FCM_DJANGO_SETTINGS = {
    "FCM_SERVER_KEY": "AAAAnSstNmo:APA91bFWMtDn88U9xK8enpDQINBUo7waRPK7sgvRgEwT4QAXycESCGiJMs4cSZx1BDrpsgLKLrEdPFOFmvsiW6AvZehPlN6eQBwfqJ4PT-9qQwyUdMgE9Sm8st27u2W0J5pPVcI2BibC"
}

# EMAIL SETTINGS
EMAIL_HOST = "mail.privateemail.com"
EMAIL_HOST_USER = "support@pharst.care"
EMAIL_HOST_PASSWORD = "hello222"
DEFAULT_FROM_EMAIL = "Pharst Care <support@pharst.care>"
SERVER_EMAIL = "support@pharst.care"
EMAIL_PORT = 465
# EMAIL_USE_TLS = True
EMAIL_USE_SSL = True
EMAIL_BACKEND = "django.core.mail.backends.smtp.EmailBackend"


QUERY_INSPECT_ENABLED = True

# Logging
LOGGING = {
    "version": 1,
    "handlers": {
        "console": {
            "level": "DEBUG",
            "class": "logging.StreamHandler",
        },
    },
    "loggers": {
        PROJECT_NAME: {
            "handlers": ["console"],
            "level": "DEBUG",
        },
        "qinspect": {
            "handlers": ["console"],
            "level": "DEBUG",
            "propagate": True,
        },
    },
}
ENVIRONMENT = "local"


DATA_UPLOAD_MAX_NUMBER_FIELDS = 5000


SOCIAL_AUTH_GOOGLE_OAUTH2_KEY = '532886190472-5maeh2pmh6f1v3cp3h9el0agk7oduv2o.apps.googleusercontent.com' # Add your Google Client ID
SOCIAL_AUTH_GOOGLE_OAUTH2_SECRET = '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'  # Add your Google Client Secret

SOCIAL_AUTH_GOOGLE_OAUTH2_SCOPE = ['https://www.googleapis.com/auth/userinfo.email', 'https://www.googleapis.com/auth/userinfo.profile']

LOGIN_REDIRECT_URL = '/'
LOGOUT_REDIRECT_URL = '/'