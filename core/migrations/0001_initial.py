# Generated by Django 4.2.4 on 2024-11-07 05:19

import core.models
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import phonenumber_field.modelfields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Account',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated', models.DateTimeField(auto_now=True, null=True)),
                ('deleted', models.DateTimeField(blank=True, null=True)),
                ('uuid', models.CharField(default=core.models.generate_unique_id, editable=False, max_length=255, unique=True)),
                ('username', models.CharField(db_index=True, max_length=255, null=True, unique=True)),
                ('first_name', models.CharField(blank=True, max_length=255, null=True)),
                ('last_name', models.CharField(blank=True, max_length=255, null=True)),
                ('middle_name', models.CharField(blank=True, max_length=255, null=True)),
                ('gender', models.CharField(blank=True, choices=[('male', 'Male'), ('female', 'Female')], max_length=15, null=True)),
                ('email', models.EmailField(db_index=True, max_length=254, null=True, unique=True)),
                ('phone_number', phonenumber_field.modelfields.PhoneNumberField(db_index=True, max_length=128, null=True, region=None, unique=True)),
                ('user_img', models.ImageField(blank=True, null=True, upload_to='profile_photos')),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('account_type', models.CharField(choices=[('client', 'client'), ('admin', 'admin')], default='client', max_length=25, null=True)),
                ('password', models.CharField(blank=True, max_length=500, null=True)),
                ('email_confirmed', models.BooleanField(default=False, null=True)),
                ('phone_number_confirmed', models.BooleanField(default=False, null=True)),
                ('reset_token', models.CharField(blank=True, max_length=255, null=True)),
                ('login_attempts', models.IntegerField(default=0)),
                ('must_reset_password', models.BooleanField(default=True)),
                ('status', models.CharField(choices=[('active', 'active'), ('deactivated', 'deactivated')], default='active', max_length=15, null=True)),
                ('date_joined', models.DateTimeField(blank=True, help_text='Date the user joined the platform.', null=True)),
                ('slug', models.CharField(max_length=200, null=True)),
                ('last_visit', models.DateTimeField(blank=True, null=True)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('current_profile', models.CharField(choices=[('professional_associate', 'Professional Associate'), ('gset_member', 'GSET Member'), ('general', 'General')], default='general', max_length=25, null=True)),
            ],
            options={
                'verbose_name': 'GSET User',
                'verbose_name_plural': 'GSET Users',
                'db_table': 'account',
            },
        ),
        migrations.CreateModel(
            name='BGTask',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated', models.DateTimeField(auto_now=True, null=True)),
                ('deleted', models.DateTimeField(blank=True, null=True)),
                ('uuid', models.CharField(default=core.models.generate_unique_id, editable=False, max_length=255, unique=True)),
                ('name', models.CharField(max_length=255)),
                ('args', models.JSONField()),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('running', 'Running'), ('completed', 'Completed'), ('failed', 'Failed')], default='pending', max_length=20)),
                ('execution_time', models.DateTimeField(default=django.utils.timezone.now)),
                ('retries', models.IntegerField(default=0)),
                ('max_retries', models.IntegerField(default=3)),
                ('priority', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High')], default='medium', max_length=10)),
                ('log', models.TextField(blank=True, null=True)),
                ('result', models.JSONField(null=True)),
            ],
            options={
                'db_table': 'bg_task',
            },
        ),
        migrations.CreateModel(
            name='EmailTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject', models.CharField(default='Pharst Newsletter', max_length=200)),
                ('text', models.TextField(blank=True, null=True)),
                ('body', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'email_template',
            },
        ),
        migrations.CreateModel(
            name='VerificationCode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated', models.DateTimeField(auto_now=True, null=True)),
                ('deleted', models.DateTimeField(blank=True, null=True)),
                ('uuid', models.CharField(default=core.models.generate_unique_id, editable=False, max_length=255, unique=True)),
                ('verification_type', models.CharField(choices=[('email', 'Email'), ('phone_number', 'Phone number'), ('whatsapp', 'WhatsApp')], max_length=35, null=True)),
                ('verification_action', models.CharField(choices=[('change_email', 'Change email'), ('change_phone_number', 'Change Phone number'), ('forgot_password', 'Forgot password'), ('login', 'Login'), ('create_account', 'Create Account')], max_length=35, null=True)),
                ('email', models.EmailField(max_length=254, null=True)),
                ('phone_number', phonenumber_field.modelfields.PhoneNumberField(max_length=128, null=True, region=None)),
                ('whatsapp_phone', phonenumber_field.modelfields.PhoneNumberField(max_length=128, null=True, region=None)),
                ('code', models.CharField(max_length=255)),
                ('expiry', models.DateTimeField(null=True)),
                ('status', models.CharField(choices=[('verified', 'Verified')], max_length=25, null=True)),
                ('account', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='core.account')),
            ],
            options={
                'db_table': 'verification_code',
            },
        ),
        migrations.CreateModel(
            name='PersonalSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated', models.DateTimeField(auto_now=True, null=True)),
                ('deleted', models.DateTimeField(blank=True, null=True)),
                ('uuid', models.CharField(default=core.models.generate_unique_id, editable=False, max_length=255, unique=True)),
                ('sms_notifications', models.BooleanField(default=False)),
                ('email_notifications', models.BooleanField(default=False)),
                ('in_app_notifications', models.BooleanField(default=True)),
                ('whatsapp_notifications', models.BooleanField(default=False)),
                ('whatsapp_phone', phonenumber_field.modelfields.PhoneNumberField(max_length=128, null=True, region=None)),
                ('active_phone', phonenumber_field.modelfields.PhoneNumberField(max_length=128, null=True, region=None)),
                ('user', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='settings', to='core.account')),
            ],
            options={
                'db_table': 'personal_settings',
            },
        ),
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated', models.DateTimeField(auto_now=True, null=True)),
                ('deleted', models.DateTimeField(blank=True, null=True)),
                ('uuid', models.CharField(default=core.models.generate_unique_id, editable=False, max_length=255, unique=True)),
                ('country', models.CharField(max_length=255)),
                ('city', models.CharField(max_length=255)),
                ('state', models.CharField(blank=True, max_length=255, null=True)),
                ('digital_address', models.CharField(blank=True, max_length=255, null=True)),
                ('address_line', models.CharField(max_length=255)),
                ('zip', models.CharField(blank=True, max_length=255, null=True)),
                ('user', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='address', to='core.account')),
            ],
            options={
                'db_table': 'address',
            },
        ),
        migrations.CreateModel(
            name='AdminUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated', models.DateTimeField(auto_now=True, null=True)),
                ('deleted', models.DateTimeField(blank=True, null=True)),
                ('uuid', models.CharField(default=core.models.generate_unique_id, editable=False, max_length=255, unique=True)),
                ('first_name', models.CharField(max_length=255, null=True)),
                ('last_name', models.CharField(max_length=255, null=True)),
                ('middle_name', models.CharField(max_length=255, null=True)),
                ('username', models.CharField(db_index=True, max_length=255, null=True, unique=True)),
                ('password', models.CharField(max_length=500)),
                ('is_staff', models.BooleanField(default=False)),
                ('new_password', models.CharField(max_length=500, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'admin_user',
            },
        ),
    ]
